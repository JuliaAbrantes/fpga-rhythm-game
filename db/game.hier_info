|game
SW[0] => move_generator:block1.selected_game[0]
SW[1] => move_generator:block1.selected_game[1]
SW[2] => move_generator:block1.selected_game[2]
SW[3] => move_generator:block1.selected_game[3]
SW[4] => move_generator:block1.selected_game[4]
SW[5] => move_generator:block1.selected_game[5]
SW[6] => move_generator:block1.selected_game[6]
SW[7] => move_generator:block1.selected_game[7]
SW[8] => move_generator:block1.selected_game[8]
SW[9] => move_generator:block1.selected_game[9]
SW[10] => move_generator:block1.selected_game[10]
SW[11] => move_generator:block1.selected_game[11]
SW[12] => ~NO_FANOUT~
SW[13] => ~NO_FANOUT~
SW[14] => ~NO_FANOUT~
SW[15] => ~NO_FANOUT~
SW[16] => ~NO_FANOUT~
SW[17] => move_generator:block1.reset
LEDR[0] << move_generator:block1.state[0]
LEDR[1] << move_generator:block1.state[1]
LEDR[2] << move_generator:block1.state[2]
LEDR[3] << move_generator:block1.state[3]
LEDR[4] << <GND>
LEDR[5] << move_generator:block1.state[4]
LEDR[6] << move_generator:block1.state[5]
LEDR[7] << move_generator:block1.state[6]
LEDR[8] << move_generator:block1.state[7]
LEDR[9] << <GND>
LEDR[10] << move_generator:block1.state[8]
LEDR[11] << move_generator:block1.state[9]
LEDR[12] << move_generator:block1.state[10]
LEDR[13] << move_generator:block1.state[11]
LEDR[14] << <GND>
LEDR[15] << <GND>
LEDR[16] << <GND>
LEDR[17] << check_move:block2.result
LEDG[0] << move_generator:block1.state[0]
LEDG[1] << <GND>
LEDG[2] << move_generator:block1.state[1]
LEDG[3] << <GND>
LEDG[4] << move_generator:block1.state[2]
LEDG[5] << <GND>
LEDG[6] << move_generator:block1.state[3]
LEDG[7] << <GND>
LEDG[8] << freq_divider:block0.clkOut
CLOCK_50 => freq_divider:block0.clkIn
KEY[0] => check_move:block2.play[0]
KEY[1] => check_move:block2.play[1]
KEY[2] => check_move:block2.play[2]
KEY[3] => check_move:block2.play[3]
HEX0[0] << bin7segdecoder:block5.decOut_n[0]
HEX0[1] << bin7segdecoder:block5.decOut_n[1]
HEX0[2] << bin7segdecoder:block5.decOut_n[2]
HEX0[3] << bin7segdecoder:block5.decOut_n[3]
HEX0[4] << bin7segdecoder:block5.decOut_n[4]
HEX0[5] << bin7segdecoder:block5.decOut_n[5]
HEX0[6] << bin7segdecoder:block5.decOut_n[6]


|game|Freq_Divider:block0
clkIn => s_counter[0].CLK
clkIn => s_counter[1].CLK
clkIn => s_counter[2].CLK
clkIn => s_counter[3].CLK
clkIn => s_counter[4].CLK
clkIn => s_counter[5].CLK
clkIn => s_counter[6].CLK
clkIn => s_counter[7].CLK
clkIn => s_counter[8].CLK
clkIn => s_counter[9].CLK
clkIn => s_counter[10].CLK
clkIn => s_counter[11].CLK
clkIn => s_counter[12].CLK
clkIn => s_counter[13].CLK
clkIn => s_counter[14].CLK
clkIn => s_counter[15].CLK
clkIn => s_counter[16].CLK
clkIn => s_counter[17].CLK
clkIn => s_counter[18].CLK
clkIn => s_counter[19].CLK
clkIn => s_counter[20].CLK
clkIn => s_counter[21].CLK
clkIn => s_counter[22].CLK
clkIn => s_counter[23].CLK
clkIn => s_counter[24].CLK
clkIn => s_counter[25].CLK
clkIn => s_counter[26].CLK
clkIn => s_counter[27].CLK
clkIn => s_counter[28].CLK
clkIn => s_counter[29].CLK
clkIn => s_counter[30].CLK
clkIn => clkOut~reg0.CLK
clkOut <= clkOut~reg0.DB_MAX_OUTPUT_PORT_TYPE


|game|move_generator:block1
selected_game[0] => s_state.DATAB
selected_game[1] => s_state.DATAB
selected_game[2] => s_state.DATAB
selected_game[3] => s_state.DATAB
selected_game[4] => s_state.DATAB
selected_game[5] => s_state.DATAB
selected_game[6] => s_state.DATAB
selected_game[7] => s_state.DATAB
selected_game[8] => s_state.DATAB
selected_game[9] => s_state.DATAB
selected_game[10] => s_state.DATAB
selected_game[11] => s_state.DATAB
clk => s_state[0].CLK
clk => s_state[1].CLK
clk => s_state[2].CLK
clk => s_state[3].CLK
clk => s_state[4].CLK
clk => s_state[5].CLK
clk => s_state[6].CLK
clk => s_state[7].CLK
clk => s_state[8].CLK
clk => s_state[9].CLK
clk => s_state[10].CLK
clk => s_state[11].CLK
state[0] <= s_state[0].DB_MAX_OUTPUT_PORT_TYPE
state[1] <= s_state[1].DB_MAX_OUTPUT_PORT_TYPE
state[2] <= s_state[2].DB_MAX_OUTPUT_PORT_TYPE
state[3] <= s_state[3].DB_MAX_OUTPUT_PORT_TYPE
state[4] <= s_state[4].DB_MAX_OUTPUT_PORT_TYPE
state[5] <= s_state[5].DB_MAX_OUTPUT_PORT_TYPE
state[6] <= s_state[6].DB_MAX_OUTPUT_PORT_TYPE
state[7] <= s_state[7].DB_MAX_OUTPUT_PORT_TYPE
state[8] <= s_state[8].DB_MAX_OUTPUT_PORT_TYPE
state[9] <= s_state[9].DB_MAX_OUTPUT_PORT_TYPE
state[10] <= s_state[10].DB_MAX_OUTPUT_PORT_TYPE
state[11] <= s_state[11].DB_MAX_OUTPUT_PORT_TYPE
reset => s_state.OUTPUTSELECT
reset => s_state.OUTPUTSELECT
reset => s_state.OUTPUTSELECT
reset => s_state.OUTPUTSELECT
reset => s_state.OUTPUTSELECT
reset => s_state.OUTPUTSELECT
reset => s_state.OUTPUTSELECT
reset => s_state.OUTPUTSELECT
reset => s_state.OUTPUTSELECT
reset => s_state.OUTPUTSELECT
reset => s_state.OUTPUTSELECT
reset => s_state.OUTPUTSELECT


|game|check_move:block2
result <= result~reg0.DB_MAX_OUTPUT_PORT_TYPE
timing => result~reg0.CLK
play[0] => Equal0.IN7
play[1] => Equal0.IN6
play[2] => Equal0.IN5
play[3] => Equal0.IN4
move[0] => Equal0.IN3
move[1] => Equal0.IN2
move[2] => Equal0.IN1
move[3] => Equal0.IN0


|game|count_points:block3
new_points[0] => Add0.IN8
new_points[1] => Add0.IN7
points_now[0] <= points_now[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
points_now[1] <= points_now[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
points_now[2] <= points_now[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
points_now[3] <= points_now[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
points_now[4] <= points_now[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
points_now[5] <= points_now[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
points_now[6] <= points_now[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
points_now[7] <= points_now[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
maximum <= <GND>
clk => points_now[0]~reg0.CLK
clk => points_now[1]~reg0.CLK
clk => points_now[2]~reg0.CLK
clk => points_now[3]~reg0.CLK
clk => points_now[4]~reg0.CLK
clk => points_now[5]~reg0.CLK
clk => points_now[6]~reg0.CLK
clk => points_now[7]~reg0.CLK
clk => s_points[0].CLK
clk => s_points[1].CLK
clk => s_points[2].CLK
clk => s_points[3].CLK
clk => s_points[4].CLK
clk => s_points[5].CLK
clk => s_points[6].CLK
clk => s_points[7].CLK


|game|Bin7SegDecoder:block5
binInput[0] => Equal0.IN3
binInput[0] => Equal1.IN0
binInput[0] => Equal2.IN3
binInput[0] => Equal3.IN1
binInput[0] => Equal4.IN3
binInput[0] => Equal5.IN1
binInput[0] => Equal6.IN3
binInput[0] => Equal7.IN2
binInput[0] => Equal8.IN3
binInput[0] => Equal9.IN1
binInput[0] => Equal10.IN3
binInput[0] => Equal11.IN2
binInput[0] => Equal12.IN3
binInput[0] => Equal13.IN2
binInput[0] => Equal14.IN3
binInput[1] => Equal0.IN2
binInput[1] => Equal1.IN3
binInput[1] => Equal2.IN0
binInput[1] => Equal3.IN0
binInput[1] => Equal4.IN2
binInput[1] => Equal5.IN3
binInput[1] => Equal6.IN1
binInput[1] => Equal7.IN1
binInput[1] => Equal8.IN2
binInput[1] => Equal9.IN3
binInput[1] => Equal10.IN1
binInput[1] => Equal11.IN1
binInput[1] => Equal12.IN2
binInput[1] => Equal13.IN3
binInput[1] => Equal14.IN2
binInput[2] => Equal0.IN1
binInput[2] => Equal1.IN2
binInput[2] => Equal2.IN2
binInput[2] => Equal3.IN3
binInput[2] => Equal4.IN0
binInput[2] => Equal5.IN0
binInput[2] => Equal6.IN0
binInput[2] => Equal7.IN0
binInput[2] => Equal8.IN1
binInput[2] => Equal9.IN2
binInput[2] => Equal10.IN2
binInput[2] => Equal11.IN3
binInput[2] => Equal12.IN1
binInput[2] => Equal13.IN1
binInput[2] => Equal14.IN1
binInput[3] => Equal0.IN0
binInput[3] => Equal1.IN1
binInput[3] => Equal2.IN1
binInput[3] => Equal3.IN2
binInput[3] => Equal4.IN1
binInput[3] => Equal5.IN2
binInput[3] => Equal6.IN2
binInput[3] => Equal7.IN3
binInput[3] => Equal8.IN0
binInput[3] => Equal9.IN0
binInput[3] => Equal10.IN0
binInput[3] => Equal11.IN0
binInput[3] => Equal12.IN0
binInput[3] => Equal13.IN0
binInput[3] => Equal14.IN0
decOut_n[0] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[1] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[2] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[3] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[4] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[5] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[6] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
enable => decOut_n.OUTPUTSELECT
enable => decOut_n.OUTPUTSELECT
enable => decOut_n.OUTPUTSELECT
enable => decOut_n.OUTPUTSELECT
enable => decOut_n.OUTPUTSELECT
enable => decOut_n.OUTPUTSELECT
enable => decOut_n.OUTPUTSELECT


